
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONCATleftMASMENOSleftPORDIVIDIDOrightUMENOSBOOL CADENA CONCAT DBPT DECIMAL DIVIDIDO ELSE ENTERO FALSE FINMIENTRAS FINPARA FINSI HACER ID IF IGUAL IGUALQUE IMPRIMIR LLAVDER LLAVIZQ MAS MAYQUE MENOS MENQUE MIENTRAS NIGUALQUE NUMERO PARA PARDER PARIZQ POR PTCOMA TRUEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | mientras_instr\n                        | hacerMientras_instr\n                        | para_instr\n                        | if_instr\n                        | if_else_instrimprimir_instr     : IMPRIMIR LLAVIZQ expresion_cadena LLAVDERdefinicion_instr   : NUMERO IDdefinicion_instr   : BOOL IDexpresion_logica     : IDdefinicion_instr     : BOOL ID IGUAL expresion_logicaasignacion_instr   : ID IGUAL expresion_logicadefinicion_instr   : NUMERO ID IGUAL expresion_numericaasignacion_instr   : ID IGUAL expresion_numericamientras_instr     : MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAShacerMientras_instr     : HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDERpara_instr     : PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARAif_instr           : IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSIif_else_instr      : IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSIexpresion_numerica : expresion_numerica MAS expresion_numerica\n                        | expresion_numerica MENOS expresion_numerica\n                        | expresion_numerica POR expresion_numerica\n                        | expresion_numerica DIVIDIDO expresion_numericaexpresion_numerica : MENOS expresion_numerica %prec UMENOSexpresion_numerica : PARIZQ expresion_numerica PARDERexpresion_numerica   : ENTERO\n                            | DECIMALexpresion_numerica   : IDexpresion_cadena     : expresion_cadena CONCAT expresion_cadenaexpresion_cadena     : CADENAexpresion_cadena     : expresion_numericaexpresion_logica : expresion_numerica MAYQUE expresion_numerica\n                        | expresion_numerica MENQUE expresion_numerica\n                        | expresion_numerica IGUALQUE expresion_numerica\n                        | expresion_numerica NIGUALQUE expresion_numerica'
    
_lr_action_items = {'IMPRIMIR':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,12,-31,-32,-33,-15,-17,-19,12,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,12,12,12,12,-20,-21,-23,12,12,12,12,-24,-22,]),'NUMERO':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,27,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,13,13,-31,-32,-33,-15,-17,-19,13,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,13,13,13,13,-20,-21,-23,13,13,13,13,-24,-22,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,27,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,15,15,-31,-32,-33,-15,-17,-19,15,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,15,15,15,15,-20,-21,-23,15,15,15,15,-24,-22,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,13,15,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,41,44,47,48,49,50,51,52,53,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,83,84,86,89,90,91,92,93,94,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,22,24,-2,36,-13,38,-14,38,14,38,36,36,-31,-32,-33,36,-15,-17,-19,38,14,-12,36,36,36,36,36,-29,-18,36,36,36,36,-16,38,-25,-26,-27,-28,-30,-37,-38,-39,-40,14,38,14,14,14,14,-20,-21,-23,14,14,14,14,-24,-22,]),'MIENTRAS':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,16,-31,-32,-33,-15,-17,-19,62,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,16,16,16,16,-20,-21,-23,16,16,16,16,-24,-22,]),'HACER':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,17,-31,-32,-33,-15,-17,-19,17,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,17,17,17,17,-20,-21,-23,17,17,17,17,-24,-22,]),'PARA':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,18,-31,-32,-33,-15,-17,-19,18,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,18,18,18,18,-20,-21,-23,18,18,18,18,-24,-22,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,20,22,24,26,34,35,36,38,39,40,44,47,53,55,60,66,67,68,69,70,71,72,73,74,75,78,79,82,83,84,86,89,90,91,92,93,94,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,19,-31,-32,-33,-15,-17,-19,19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,19,19,19,19,-20,-21,-23,19,19,19,19,-24,-22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,20,22,24,34,35,36,38,39,40,47,53,55,60,66,67,68,69,70,71,72,73,74,83,84,86,93,94,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,-31,-32,-33,-15,-17,-19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,-20,-21,-23,-24,-22,]),'FINMIENTRAS':([3,4,5,6,7,8,9,10,11,20,22,24,34,35,36,38,39,40,47,53,55,60,66,67,68,69,70,71,72,73,74,79,83,84,86,93,94,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,-31,-32,-33,-15,-17,-19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,83,-20,-21,-23,-24,-22,]),'FINSI':([3,4,5,6,7,8,9,10,11,20,22,24,34,35,36,38,39,40,47,53,55,60,66,67,68,69,70,71,72,73,74,82,83,84,86,91,93,94,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,-31,-32,-33,-15,-17,-19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,86,-20,-21,-23,93,-24,-22,]),'ELSE':([3,4,5,6,7,8,9,10,11,20,22,24,34,35,36,38,39,40,47,53,55,60,66,67,68,69,70,71,72,73,74,82,83,84,86,93,94,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,-31,-32,-33,-15,-17,-19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,87,-20,-21,-23,-24,-22,]),'FINPARA':([3,4,5,6,7,8,9,10,11,20,22,24,34,35,36,38,39,40,47,53,55,60,66,67,68,69,70,71,72,73,74,83,84,86,92,93,94,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-13,-14,-31,-32,-33,-15,-17,-19,-12,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,-20,-21,-23,94,-24,-22,]),'LLAVIZQ':([12,16,18,19,62,],[21,25,27,28,76,]),'IGUAL':([14,22,24,],[23,37,41,]),'DBPT':([17,61,64,84,87,88,],[26,75,78,75,89,90,]),'CADENA':([21,48,],[30,30,]),'MENOS':([21,23,25,28,31,32,33,34,35,36,37,38,40,41,43,48,49,50,51,52,53,54,55,56,57,58,59,63,66,67,68,69,70,71,72,73,74,76,],[32,32,32,32,50,32,32,-31,-32,-33,32,-33,50,32,50,32,32,32,32,32,-29,50,50,32,32,32,32,32,-25,-26,-27,-28,-30,50,50,50,50,32,]),'PARIZQ':([21,23,25,28,32,33,37,41,48,49,50,51,52,56,57,58,59,63,76,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ENTERO':([21,23,25,28,32,33,37,41,48,49,50,51,52,56,57,58,59,63,76,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'DECIMAL':([21,23,25,28,32,33,37,41,48,49,50,51,52,56,57,58,59,63,76,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PTCOMA':([22,24,34,35,36,38,45,53,55,60,66,67,68,69,70,71,72,73,74,77,],[-13,-14,-31,-32,-33,-15,63,-29,-18,-16,-25,-26,-27,-28,-30,-37,-38,-39,-40,81,]),'LLAVDER':([29,30,31,34,35,36,38,39,40,42,46,53,65,66,67,68,69,70,71,72,73,74,80,85,],[47,-35,-36,-31,-32,-33,-15,-17,-19,61,64,-29,-34,-25,-26,-27,-28,-30,-37,-38,-39,-40,84,88,]),'CONCAT':([29,30,31,34,35,36,53,65,66,67,68,69,70,],[48,-35,-36,-31,-32,-33,-29,-34,-25,-26,-27,-28,-30,]),'MAS':([31,34,35,36,38,40,43,53,54,55,66,67,68,69,70,71,72,73,74,],[49,-31,-32,-33,-33,49,49,-29,49,49,-25,-26,-27,-28,-30,49,49,49,49,]),'POR':([31,34,35,36,38,40,43,53,54,55,66,67,68,69,70,71,72,73,74,],[51,-31,-32,-33,-33,51,51,-29,51,51,51,51,-27,-28,-30,51,51,51,51,]),'DIVIDIDO':([31,34,35,36,38,40,43,53,54,55,66,67,68,69,70,71,72,73,74,],[52,-31,-32,-33,-33,52,52,-29,52,52,52,52,-27,-28,-30,52,52,52,52,]),'MAYQUE':([34,35,36,38,40,43,53,66,67,68,69,70,],[-31,-32,-33,-33,56,56,-29,-25,-26,-27,-28,-30,]),'MENQUE':([34,35,36,38,40,43,53,66,67,68,69,70,],[-31,-32,-33,-33,57,57,-29,-25,-26,-27,-28,-30,]),'IGUALQUE':([34,35,36,38,40,43,53,66,67,68,69,70,],[-31,-32,-33,-33,58,58,-29,-25,-26,-27,-28,-30,]),'NIGUALQUE':([34,35,36,38,40,43,53,66,67,68,69,70,],[-31,-32,-33,-33,59,59,-29,-25,-26,-27,-28,-30,]),'PARDER':([34,35,36,53,54,66,67,68,69,70,],[-31,-32,-33,-29,70,-25,-26,-27,-28,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,26,75,78,89,90,],[2,44,79,82,91,92,]),'instruccion':([0,2,26,44,75,78,79,82,89,90,91,92,],[3,20,3,20,3,3,20,20,3,3,20,20,]),'imprimir_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'definicion_instr':([0,2,26,27,44,75,78,79,82,89,90,91,92,],[5,5,5,45,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,26,44,75,78,79,81,82,89,90,91,92,],[6,6,6,6,6,6,6,85,6,6,6,6,6,]),'mientras_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'hacerMientras_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'para_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'if_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'if_else_instr':([0,2,26,44,75,78,79,82,89,90,91,92,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'expresion_cadena':([21,48,],[29,65,]),'expresion_numerica':([21,23,25,28,32,33,37,41,48,49,50,51,52,56,57,58,59,63,76,],[31,40,43,43,53,54,55,43,31,66,67,68,69,71,72,73,74,43,43,]),'expresion_logica':([23,25,28,41,63,76,],[39,42,46,60,77,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',135),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',139),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',145),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',149),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','gramatica.py',150),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',151),
  ('instruccion -> mientras_instr','instruccion',1,'p_instruccion','gramatica.py',152),
  ('instruccion -> hacerMientras_instr','instruccion',1,'p_instruccion','gramatica.py',153),
  ('instruccion -> para_instr','instruccion',1,'p_instruccion','gramatica.py',154),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',155),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','gramatica.py',156),
  ('imprimir_instr -> IMPRIMIR LLAVIZQ expresion_cadena LLAVDER','imprimir_instr',4,'p_instruccion_imprimir','gramatica.py',160),
  ('definicion_instr -> NUMERO ID','definicion_instr',2,'p_instruccion_definicion','gramatica.py',164),
  ('definicion_instr -> BOOL ID','definicion_instr',2,'p_instruccion_definicionBool','gramatica.py',168),
  ('expresion_logica -> ID','expresion_logica',1,'p_valoresBooleanos','gramatica.py',172),
  ('definicion_instr -> BOOL ID IGUAL expresion_logica','definicion_instr',4,'p_defiasigbool_instr','gramatica.py',176),
  ('asignacion_instr -> ID IGUAL expresion_logica','asignacion_instr',3,'p_asignacionbool_instr','gramatica.py',180),
  ('definicion_instr -> NUMERO ID IGUAL expresion_numerica','definicion_instr',4,'p_defiasig_instr','gramatica.py',184),
  ('asignacion_instr -> ID IGUAL expresion_numerica','asignacion_instr',3,'p_asignacion_instr','gramatica.py',188),
  ('mientras_instr -> MIENTRAS LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINMIENTRAS','mientras_instr',7,'p_mientras_instr','gramatica.py',192),
  ('hacerMientras_instr -> HACER DBPT instrucciones MIENTRAS LLAVIZQ expresion_logica LLAVDER','hacerMientras_instr',7,'p_hacerMientras_instr','gramatica.py',196),
  ('para_instr -> PARA LLAVIZQ definicion_instr PTCOMA expresion_logica PTCOMA asignacion_instr LLAVDER DBPT instrucciones FINPARA','para_instr',11,'p_para_instr','gramatica.py',200),
  ('if_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones FINSI','if_instr',7,'p_if_instr','gramatica.py',204),
  ('if_else_instr -> IF LLAVIZQ expresion_logica LLAVDER DBPT instrucciones ELSE DBPT instrucciones FINSI','if_else_instr',10,'p_if_else_instr','gramatica.py',208),
  ('expresion_numerica -> expresion_numerica MAS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',212),
  ('expresion_numerica -> expresion_numerica MENOS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',213),
  ('expresion_numerica -> expresion_numerica POR expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',214),
  ('expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',215),
  ('expresion_numerica -> MENOS expresion_numerica','expresion_numerica',2,'p_expresion_unaria','gramatica.py',222),
  ('expresion_numerica -> PARIZQ expresion_numerica PARDER','expresion_numerica',3,'p_expresion_agrupacion','gramatica.py',226),
  ('expresion_numerica -> ENTERO','expresion_numerica',1,'p_expresion_number','gramatica.py',230),
  ('expresion_numerica -> DECIMAL','expresion_numerica',1,'p_expresion_number','gramatica.py',231),
  ('expresion_numerica -> ID','expresion_numerica',1,'p_expresion_id','gramatica.py',235),
  ('expresion_cadena -> expresion_cadena CONCAT expresion_cadena','expresion_cadena',3,'p_expresion_concatenacion','gramatica.py',239),
  ('expresion_cadena -> CADENA','expresion_cadena',1,'p_expresion_cadena','gramatica.py',243),
  ('expresion_cadena -> expresion_numerica','expresion_cadena',1,'p_expresion_cadena_numerico','gramatica.py',247),
  ('expresion_logica -> expresion_numerica MAYQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',251),
  ('expresion_logica -> expresion_numerica MENQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',252),
  ('expresion_logica -> expresion_numerica IGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',253),
  ('expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',254),
]
